name: TestingInConda

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'
jobs:
  setup-build:
    name: Ex1 (${{ matrix.python-version }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"]
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v3
    - name: Setup Miniconda
      uses: conda-incubator/setup-miniconda@v2.1.1
      with:
        update-conda: false
        activate-environment: mtmetadata-test
        python-version: ${{ matrix.python-version }}

    - name: Install Env
      shell: bash
      run: |
        python --version
        conda install -c conda-forge pytest pytest-cov
        
    - name: Install Our Package
      shell: bash
      run: |
        # source activate mtmetadata-test
        pip install -e .
        conda list
        pip freeze
    - name: Run Tests
      shell: bash
      run: |
        # source activate mtmetadata-test
        pytest --cov=./ --cov-report=xml --cov=mt_metadata
        
    - name: "Upload coverage to Codecov"
      uses: codecov/codecov-action@v3
      with:
        fail_ci_if_error: false
        verbose: true
        flags: tests
        
